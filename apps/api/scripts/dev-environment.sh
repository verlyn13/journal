#!/usr/bin/env bash
# dev-environment.sh
# Generate apps/api/.env from gopass and test Infisical UA connectivity

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
API_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

require() { command -v "$1" >/dev/null 2>&1 || { echo "Missing: $1" >&2; exit 1; }; }

require gopass

ENV_FILE="$API_DIR/.env"
echo "Generating $ENV_FILE from gopass..."

# Pull core values via setup script export function
eval "$("$SCRIPT_DIR/setup-infisical-auth.sh" export)"

cat > "$ENV_FILE" <<EOF
# Auto-generated by dev-environment.sh
INFISICAL_PROJECT_ID=$INFISICAL_PROJECT_ID
INFISICAL_SERVER_URL=$INFISICAL_SERVER_URL
INFISICAL_ENVIRONMENT=dev

UA_CLIENT_ID_TOKEN_SERVICE=$UA_CLIENT_ID_TOKEN_SERVICE
UA_CLIENT_SECRET_TOKEN_SERVICE=$UA_CLIENT_SECRET_TOKEN_SERVICE
UA_CLIENT_ID_ROTATOR=$UA_CLIENT_ID_ROTATOR
UA_CLIENT_SECRET_ROTATOR=$UA_CLIENT_SECRET_ROTATOR

INFISICAL_CACHE_TTL=300
INFISICAL_TIMEOUT=30.0
INFISICAL_MAX_RETRIES=3

JOURNAL_DISABLE_STARTUP=1
EOF

echo "✅ Wrote $ENV_FILE"

echo "Testing Universal Auth via validate script..."
pushd "$API_DIR" >/dev/null
./scripts/validate-infisical-setup.sh || { echo "Validation failed"; exit 1; }
popd >/dev/null

RUN_DEV="$API_DIR/../run-dev.sh"
cat > "$RUN_DEV" <<'EOF'
#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/apps/api"
echo "Starting API with uv and Universal Auth configured..."
uv run fastapi run app/main.py --host 0.0.0.0 --port 5000
EOF
chmod +x "$RUN_DEV"
echo "✅ Created $RUN_DEV"

echo "All set. You can now run: $RUN_DEV"

