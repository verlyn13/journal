#############################
# Project: Journal (Python)
# Tooling: uv, ruff, mypy, pytest
# Aligns with docs/dual-language-setup.md
#############################

[project]
name = "journal"
version = "0.1.0"
description = "A personal journal tool for documenting progress. Built with Flask, HTMX, and Alpine.js."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  # Web framework and extensions
  "Flask",
  "Flask-SQLAlchemy",
  "Flask-Migrate",
  "Flask-Login",
  "Flask-WTF",

  # Runtime utilities
  "python-dotenv",
  "Werkzeug",
  "Markdown",
  "gunicorn",
  "email-validator",
  # Observability / logging
  "structlog[dev]>=25.4.0",
  "opentelemetry-sdk>=1.36.0",
  "opentelemetry-exporter-otlp-proto-http>=1.36.0",
  "opentelemetry-instrumentation-flask>=0.47b0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

#############################
# uv: package/venv management
#############################
[tool.uv]
managed = true
dev-dependencies = [
  "pytest>=8.3.5",
  "pytest-cov>=6.0.0",
  "mypy>=1.15.0",
  "ruff==0.12.11",
  "rich>=13.7.1",
]

[dependency-groups]
dev = [
  "pytest>=8.3.5",
  "pytest-cov>=6.0.0",
  "mypy>=1.15.0",
  "ruff==0.12.11",
]
test = [
  "pytest>=8.3.5",
  "pytest-cov>=6.0.0",
]
lint = [
  "ruff==0.12.11",
  "mypy>=1.15.0",
]

#############################
# Note: uv 0.8.14 does not support
# [tool.uv.scripts] in this environment.
# Use direct CLI or Bun/NPM tasks instead.
#############################

#############################
# Ruff: linter + formatter
#############################
[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py313"
preview = true
respect-gitignore = true
force-exclude = true
exclude = [
  ".venv",
  "venv",
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  ".ruff_cache",
  "__pycache__",
  "dist",
  "build",
  "*.egg-info",
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "D",   # pydocstyle
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "PIE", # flake8-pie
  "T20", # flake8-print
  "PYI", # flake8-pyi
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "ARG", # flake8-unused-arguments
  "ERA", # eradicate
  "PGH", # pygrep-hooks
  "PL",  # pylint
  "TRY", # tryceratops
  "FLY", # flynt
  "PERF",# perflint
  "FURB",# refurb
  "LOG", # flake8-logging
  "RUF", # ruff-specific
]
ignore = [
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D107",   # Missing docstring in __init__
  "D203",   # 1 blank line before class docstring
  "D213",   # Summary on the second line
  "E501",   # Line too long (formatter handles wrapping)
  "PGH003", # Use specific rule codes when ignoring type issues
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["journal"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
split-on-trailing-comma = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
typing = "t"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101",      # assert in tests
  "ARG",       # unused args (fixtures)
  "FBT",       # boolean positional args
  "PLR2004",   # magic value in comparison
  "S311",      # non-crypto RNG
]
"**/__init__.py" = ["F401"]
"config.py" = ["ERA"]
"journal/__init__.py" = ["PLC0415"]
"scripts/**/*.py" = ["T201"]
"journal/auth/__init__.py" = ["E402"]
"journal/main/__init__.py" = ["E402", "ERA001", "W505"]
"journal/api/__init__.py" = ["E402"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = "dynamic"

#############################
# mypy: static type checking
#############################
[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
