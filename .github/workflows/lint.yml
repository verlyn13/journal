name: Lint

on:
  push:
    branches: [main, develop, feat/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-lint:
    name: Python Linting
    runs-on: ubuntu-latest
    continue-on-error: true  # Stage 1: warnings allowed, do not fail PRs

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # Option A: Using official Astral Ruff Action (recommended)
      - name: Run Ruff linter
        uses: astral-sh/ruff-action@3a3a43aee5e6e9b908c774825e4c6e7b0948bf79
        with:
          version: "0.13.0"
          args: "check --output-format=github ."
          src: "./apps/api"

      - name: Check formatting with Ruff
        uses: astral-sh/ruff-action@3a3a43aee5e6e9b908c774825e4c6e7b0948bf79
        with:
          version: "0.13.0"
          args: "format --check ."
          src: "./apps/api"

      # Alternative Option B: Using uv (kept for reference)
      # - name: Install uv
      #   uses: astral-sh/setup-uv@v5
      #   with:
      #     enable-cache: true
      #     cache-dependency-glob: "apps/api/uv.lock"
      #
      # - name: Run linting with uv
      #   working-directory: apps/api
      #   run: |
      #     uvx ruff@0.13.0 check . --output-format=github
      #     uvx ruff@0.13.0 format --check .
      
      - name: Upload Ruff results
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: ruff-results
          path: apps/api/.ruff_cache/
          retention-days: 7

  python-types:
    name: Python Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "apps/api/uv.lock"
      
      - name: Set up Python
        run: uv python install 3.13
      
      - name: Install dependencies
        working-directory: apps/api
        run: uv sync --all-extras --dev
      
      - name: Run mypy
        working-directory: apps/api
        run: |
          echo "::group::mypy type check"
          uv run mypy app --config-file mypy.ini
          echo "::endgroup::"
      
      - name: Upload mypy cache
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: mypy-cache
          path: apps/api/.mypy_cache/
          retention-days: 7

  javascript-lint:
    name: JavaScript/TypeScript Linting
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5
        with:
          bun-version: latest
      
      - name: Install dependencies
        working-directory: apps/web
        run: bun install --frozen-lockfile
      
      - name: Run Biome linter
        working-directory: apps/web
        run: |
          echo "::group::Biome check"
          bunx @biomejs/biome check --reporter=github
          echo "::endgroup::"
      
      - name: TypeScript type check
        working-directory: apps/web
        run: |
          echo "::group::TypeScript check"
          bun run typecheck
          echo "::endgroup::"

  lint-summary:
    name: Lint Summary
    runs-on: ubuntu-latest
    needs: [python-lint, python-types, javascript-lint]
    if: always()
    
    steps:
      - name: Check lint results
        run: |
          echo "## Lint Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.python-lint.result }}" == "success" ]; then
            echo "‚úÖ Python linting passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Python linting failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.python-types.result }}" == "success" ]; then
            echo "‚úÖ Python type checking passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Python type checking failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.javascript-lint.result }}" == "success" ]; then
            echo "‚úÖ JavaScript/TypeScript linting passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå JavaScript/TypeScript linting failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Fail if any job failed
          if [ "${{ needs.python-lint.result }}" != "success" ] || \
             [ "${{ needs.python-types.result }}" != "success" ] || \
             [ "${{ needs.javascript-lint.result }}" != "success" ]; then
            echo ""
            echo "‚ö†Ô∏è Some linting checks failed. Please review the errors above."
            exit 1
          fi
          
          echo ""
          echo "üéâ All linting checks passed!"
