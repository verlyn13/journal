name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  osv-scan:
    name: OSV Security Scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OSV Scanner
        uses: google/osv-scanner-action@v1.9.1
        with:
          scan-args: '. --skip-git --format sarif --output osv-results.sarif'
        continue-on-error: true

      - name: Upload OSV results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: osv-results.sarif
          category: osv-scanner
        continue-on-error: true

      - name: Upload OSV results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: osv-scan-results
          path: osv-results.sarif
          retention-days: 30

  python-audit:
    name: Python Dependency Audit
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: apps/api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run pip-audit
        run: |
          uv pip install pip-audit
          uv run pip-audit --desc --fix --dry-run || true
        continue-on-error: true

      - name: Run safety check
        run: |
          uv pip install safety
          uv run safety check --json || true
        continue-on-error: true

  npm-audit:
    name: NPM Dependency Audit
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        app: [web]  # Only web app exists, mobile removed
    defaults:
      run:
        working-directory: apps/${{ matrix.app }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run bun audit
        run: bun audit --production || true
        continue-on-error: true

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        include:
          - context: apps/api
            dockerfile: Dockerfile
            image: journal-api
          - context: apps/web
            dockerfile: Dockerfile
            image: journal-web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build container image
        run: |
          docker build -t ${{ matrix.image }}:scan \
            -f ${{ matrix.context }}/${{ matrix.dockerfile }} \
            ${{ matrix.context }}
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ matrix.image }}:scan
          format: 'sarif'
          output: 'trivy-${{ matrix.image }}.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'  # Non-blocking
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-${{ matrix.image }}.sarif'
          category: 'trivy-${{ matrix.image }}'
        continue-on-error: true

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better detection

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Upload Gitleaks results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          retention-days: 30

  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-24.04
    needs: [osv-scan, python-audit, npm-audit, container-scan, secret-scan]
    if: always()
    steps:
      - name: Security scan summary
        run: |
          echo "## ðŸ”’ Security Scan Summary"
          echo ""
          echo "All security scans have completed. These scans are:"
          echo "- **Non-blocking**: Issues found will not fail the CI"
          echo "- **Informational**: Review findings in the Security tab"
          echo ""
          echo "### Scan Types Performed:"
          echo "- âœ… OSV vulnerability database scan"
          echo "- âœ… Python dependency audit (pip-audit, safety)"
          echo "- âœ… NPM dependency audit (bun audit)"
          echo "- âœ… Container image vulnerability scan (Trivy)"
          echo "- âœ… Secret detection (Gitleaks)"
          echo ""
          echo "### Next Steps:"
          echo "1. Review findings in GitHub Security tab"
          echo "2. Address critical/high severity issues"
          echo "3. Update dependencies as needed"
          echo ""
          echo "ðŸ“Š Full reports available in workflow artifacts"