name: Web Tests

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  vitest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.21'
      - name: Install deps
        run: bun install
      - name: Run vitest with coverage
        run: bun run test:coverage || bun run test:run
      - name: Upload vitest coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-vitest-coverage
          path: |
            apps/web/coverage
            apps/web/coverage/**

  playwright:
    name: Playwright E2E
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: journal
          POSTGRES_PASSWORD: journal
          POSTGRES_DB: journal
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U journal" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.21'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install API deps
        working-directory: apps/api
        run: uv sync --all-extras --dev
      - name: Run DB migrations
        working-directory: apps/api
        env:
          JOURNAL_DB_URL: postgresql+asyncpg://journal:journal@localhost:5432/journal
        run: uv run alembic -c alembic.ini upgrade head
      - name: Wait for DB auth (robust)
        working-directory: apps/api
        env:
          DB_SYNC_URL: postgresql+psycopg2://journal:journal@localhost:5432/journal
        run: |
          uv run python - << 'PY'
          import os, time
          import psycopg2
          url = os.environ['DB_SYNC_URL']
          for i in range(30):
              try:
                  conn = psycopg2.connect(url)
                  conn.close()
                  print('DB auth OK')
                  break
              except Exception as e:
                  print('DB not ready/auth error:', e)
                  time.sleep(2)
          else:
              raise SystemExit('DB did not become ready for auth in time')
          PY
      - name: Start API server
        working-directory: apps/api
        env:
          JOURNAL_DB_URL: postgresql+asyncpg://journal:journal@localhost:5432/journal
        run: nohup uv run fastapi run app/main.py --host 0.0.0.0 --port 5000 >/tmp/api.log 2>&1 &
      - name: Wait for API
        run: |
          for i in {1..30}; do curl -sf http://localhost:5000/health && break || (sleep 2); done
      - name: Install root deps
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run Playwright
        env:
          BASE_URL: http://localhost:5000
        run: npm test
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            playwright-report
            test-results
